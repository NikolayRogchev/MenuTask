@using MenuTask.Components.Models
@using Microsoft.JSInterop
<div style="position: relative" @ref="menuRef">
    <CascadingValue Name="@nameof(this.MenuBoundingBox)" Value="MenuBoundingBox">
        @ChildContent
    </CascadingValue>
</div>

<script>
    window.getBoundingBoxClientRect = (element) => {
        return element.getBoundingClientRect();
    }
</script>

@code {
    private ElementReference menuRef;

    [Parameter]
    [EditorRequired]
    public required RenderFragment ChildContent { get; set; }

    [Inject]
    public required IJSRuntime JSRuntime { get; set; }

    public BoundingBoxClientRect? MenuBoundingBox { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var boundingBox = await JSRuntime.InvokeAsync<BoundingBoxClientRect>(JsFunctionNames.GetBoundingBoxClientRect, [menuRef]);

        if (MenuBoundingBox != boundingBox)
        {
            MenuBoundingBox = boundingBox;
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
