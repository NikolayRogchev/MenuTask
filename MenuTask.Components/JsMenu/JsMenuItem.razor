@{
    bool isRoot = Level == 1;
    string subMenuItemClasses = "subMenuContainer shadow";
    string arrowDown = "\u2193";
    string arrowRight = "\u2192";
    string arrow = isRoot ? arrowDown : arrowRight;
}

<div class="menuItem @(isRoot ? string.Empty : subMenuItemClasses)"
     style="left:0;top:0;"
     @ref="SubMenuAnchor">
    <span class="menuItemText">@Text</span>
    <span class="arrow @(ChildContent == null ? "hidden" : string.Empty)">@arrow</span>
    @if (ChildContent != null)
    {
        <CascadingValue Name="Parent" Value="@(this)">
            <div class="menuItemChild">@ChildContent</div>
        </CascadingValue>
    }
</div>



@code {
    [CascadingParameter(Name = nameof(JsMenuItems.Level))]
    public required int Level { get; set; }

    [EditorRequired]
    [Parameter]
    public required string Text { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    public ElementReference SubMenuAnchor { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}